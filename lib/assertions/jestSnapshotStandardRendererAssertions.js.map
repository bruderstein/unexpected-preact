{"version":3,"sources":["../../src/assertions/jestSnapshotStandardRendererAssertions.js"],"names":["installInto","expect","rawAdapter","convertToString","concatTextContent","preactAdapter","renderedPreactAdapter","addAssertion","subject","flags","wrapRootNode","renderer","target","eventName","eventArgs","satisfy","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AAGA,SAASA,WAAT,CAAqBC,MAArB,EAA6B;;AAE3B,MAAMC,aAAa,2CAAe,EAAEC,iBAAiB,IAAnB,EAAyBC,mBAAmB,IAA5C,EAAf,CAAnB;AACA,MAAMC,gBAAgB,8CAAyB,EAAEF,iBAAiB,IAAnB,EAAzB,CAAtB;AACA,MAAMG,wBAAwB,sDAA0B,EAAEH,iBAAiB,IAAnB,EAAyBC,mBAAmB,IAA5C,EAA1B,CAA9B;;AAEAH,SAAOM,YAAP,CAAoB,2CAApB,EACE,UAAUN,MAAV,EAAkBO,OAAlB,EAA2B;AACzB,oCAAgBP,MAAhB,EAAwB,KAAKQ,KAA7B,EAAoCH,qBAApC,EAA2DE,OAA3D,EAAoE,kDAAsBE,YAAtB,CAAmCF,OAAnC,CAApE;AACD,GAHH;;AAMAP,SAAOM,YAAP,CAAoB,uDAApB,EACE,UAAUN,MAAV,EAAkBO,OAAlB,EAA2B;AACzB,sCAAaP,MAAb,EAAqBO,QAAQG,QAA7B,EAAuCH,QAAQI,MAA/C,EAAuDJ,QAAQK,SAA/D,EAA0EL,QAAQM,SAAlF;AACAb,WAAOO,QAAQG,QAAf,EAAyB,mBAAzB;AACD,GAJH;;AAOAV,SAAOM,YAAP,CAAoB,6CAApB,EACE,UAAUN,MAAV,EAAkBO,OAAlB,EAA2B;AACzB,oCAAgBP,MAAhB,EAAwB,EAAEc,SAAS,IAAX,EAAxB,EAA2CT,qBAA3C,EAAkEE,OAAlE,EAA2E,kDAAsBE,YAAtB,CAAmCF,OAAnC,CAA3E;AACD,GAHH;;AAMAP,SAAOM,YAAP,CAAoB,yDAApB,EACE,UAAUN,MAAV,EAAkBO,OAAlB,EAA2B;AACzB,sCAAaP,MAAb,EAAqBO,QAAQG,QAA7B,EAAuCH,QAAQI,MAA/C,EAAuDJ,QAAQK,SAA/D,EAA0EL,QAAQM,SAAlF;AACAb,WAAOO,QAAQG,QAAf,EAAyB,qBAAzB;AACD,GAJH;AAMD;;AAEDK,OAAOC,OAAP,GAAiB,EAAEjB,wBAAF,EAAjB","file":"jestSnapshotStandardRendererAssertions.js","sourcesContent":["import RawAdapter from 'unexpected-htmllike-raw-adapter';\nimport PreactElementAdapter from 'unexpected-htmllike-preact-adapter';\nimport PreactRenderedAdapter from 'unexpected-htmllike-preactrendered-adapter';\nimport { triggerEvent } from './deepAssertions'\nimport { compareSnapshot } from '../helpers/snapshots';\n\n\nfunction installInto(expect) {\n\n  const rawAdapter = new RawAdapter({ convertToString: true, concatTextContent: true });\n  const preactAdapter = new PreactElementAdapter({ convertToString: true });\n  const renderedPreactAdapter = new PreactRenderedAdapter({ convertToString: true, concatTextContent: true });\n\n  expect.addAssertion('<RenderedPreactElement> to match snapshot',\n    function (expect, subject) {\n      compareSnapshot(expect, this.flags, renderedPreactAdapter, subject, PreactRenderedAdapter.wrapRootNode(subject));\n    }\n  );\n  \n  expect.addAssertion('<RenderedPreactElementPendingEvent> to match snapshot',\n    function (expect, subject) {\n      triggerEvent(expect, subject.renderer, subject.target, subject.eventName, subject.eventArgs);\n      expect(subject.renderer, 'to match snapshot');\n    }\n  );\n  \n  expect.addAssertion('<RenderedPreactElement> to satisfy snapshot',\n    function (expect, subject) {\n      compareSnapshot(expect, { satisfy: true }, renderedPreactAdapter, subject, PreactRenderedAdapter.wrapRootNode(subject));\n    }\n  );\n  \n  expect.addAssertion('<RenderedPreactElementPendingEvent> to satisfy snapshot',\n    function (expect, subject) {\n      triggerEvent(expect, subject.renderer, subject.target, subject.eventName, subject.eventArgs);\n      expect(subject.renderer, 'to satisfy snapshot');\n    }\n  );\n}\n\nmodule.exports = { installInto };\n"]}