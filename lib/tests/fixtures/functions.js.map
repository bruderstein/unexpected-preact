{"version":3,"sources":["../../../src/tests/fixtures/functions.js"],"names":["bound1","bound2","bound3","a","b","someObject","module","exports","anonymous","anonymousContent","anonymousContentArgs","named","doStuff","namedContent","namedContentArgs","bound","bind","boundContent","boundContentArgs"],"mappings":";;AACA,SAASA,MAAT,GAAkB,CAAE,WAAa;AACjC,SAASC,MAAT,GAAkB;AAAE,SAAO,EAAP;AAAY;AAChC,SAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AAAE,SAAOD,IAAIC,CAAX;AAAe;;AAEvC,IAAIC,aAAa,EAAjB;;AAEA;AACA;AACAC,OAAOC,OAAP,GAAiB;AACfC,aAAW;AAAA,WAAM,YAAY,CAAE,WAAa,CAAjC;AAAA,GADI;AAEfC,oBAAkB;AAAA,WAAM,YAAY;AAAE,aAAO,EAAP;AAAY,KAAhC;AAAA,GAFH;AAGfC,wBAAsB;AAAA,WAAM,UAAUP,CAAV,EAAaC,CAAb,EAAgB;AAAE,aAAOD,IAAIC,CAAX;AAAe,KAAvC;AAAA,GAHP;AAIfO,SAAO;AAAA,WAAM,SAASC,OAAT,GAAmB,CAAE,WAAa,CAAxC;AAAA,GAJQ;AAKfC,gBAAc;AAAA,WAAM,SAASD,OAAT,GAAmB;AAAE,aAAO,EAAP;AAAY,KAAvC;AAAA,GALC;AAMfE,oBAAkB;AAAA,WAAM,SAASF,OAAT,CAAiBT,CAAjB,EAAoBC,CAApB,EAAuB;AAC7C;AACA,aAAOD,IAAIC,CAAX;AACD,KAHiB;AAAA,GANH;AAUfW,SAAO;AAAA,WAAMf,OAAOgB,IAAP,CAAYX,UAAZ,CAAN;AAAA,GAVQ;AAWfY,gBAAc;AAAA,WAAMhB,OAAOe,IAAP,CAAYX,UAAZ,CAAN;AAAA,GAXC;AAYfa,oBAAkB;AAAA,WAAMhB,OAAOc,IAAP,CAAYX,UAAZ,CAAN;AAAA;AAZH,CAAjB","file":"functions.js","sourcesContent":["\nfunction bound1() { /* stuff */ }\nfunction bound2() { return 42; }\nfunction bound3(a, b) { return a + b; }\n\nvar someObject = {};\n\n// These are all helper functions that return a new instance of a function of the given type\n// They are in this separate file such that when running with wallaby, they don't get instrumented (which makes them all different!)\nmodule.exports = {\n  anonymous: () => function () { /* stuff */ },\n  anonymousContent: () => function () { return 42; },\n  anonymousContentArgs: () => function (a, b) { return a + b; },\n  named: () => function doStuff() { /* stuff */ },\n  namedContent: () => function doStuff() { return 42; },\n  namedContentArgs: () => function doStuff(a, b) {\n    // comment\n    return a + b;\n  },\n  bound: () => bound1.bind(someObject),\n  boundContent: () => bound2.bind(someObject),\n  boundContentArgs: () => bound3.bind(someObject)\n};"]}