{"version":3,"sources":["../../src/tests/unexpected-preact-deep.spec.js"],"names":["EmulateDom","require","Unexpected","UnexpectedPreact","PreactRenderedAdapter","Preact","PreactCompat","expect","clone","use","output","preferredWidth","runTests","testGroupDescription","h","Component","render","renderIntoDocument","element","container","window","document","createElement","CustomComp","state","clickCount","onClick","bind","event","preventDefault","setState","children","props","childCount","i","push","extraProps","useEvents","class","WrapperComp","MyDiv","addAssertion","subject","value","promise","resolve","reject","setTimeout","fail","e","describe","beforeEach","it","component","wrapRootNode","inspect","toString","join","Event","bubbles","cancellable","dispatchEvent","base","CustomCompWrapper","and","NumberComponent","then","span","HTMLElement","className","Message","msg","ClickableComponent","itemClickCount","handleItemClick","handleItemMouseDown","handleMainClick","handleMouseDown","clientX","otherComp","result","TodoItem","isCompleted","label","TodoList","todoItem","div","tagName","Stateless"],"mappings":"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","file":"unexpected-preact-deep.spec.js","sourcesContent":["/*\n * A note about these tests:\n *\n * These tests are specifically only testing that the correct calls are being made\n  * to unexpected-htmllike, and that the output is correctly returned.\n  * They also test the integration with the unexpected-htmllike-rendered-react-adapter\n  * There are many, many more cases for specific diffing cases in the tests for\n  * `unexpected-htmllike`\n */\n\nconst EmulateDom = require('./helpers/emulateDom');\n\nconst Unexpected = require('unexpected');\nconst UnexpectedPreact = require('../unexpected-preact');\nconst PreactRenderedAdapter = require('unexpected-htmllike-preactrendered-adapter');\n\nconst Preact = require('preact');\nconst PreactCompat = require('preact-compat');\n\nconst expect = Unexpected.clone()\n    .use(UnexpectedPreact);\n\nexpect.output.preferredWidth = 80;\n\n/**\n * Generates the tests for a given preact setup.\n * This encapsulates all the tests, and enables them to all be run both with praect and preact-compat\n * @param h\n * @param Component\n * @param render\n * @param testGroupDescription\n */\nfunction runTests({ h, Component, render }, testGroupDescription) {\n\n  function renderIntoDocument(element) {\n\n    const container = window.document.createElement('div');\n    return render(element, container);\n  }\n\n  class CustomComp extends Component {\n\n    constructor() {\n      super();\n      this.state = {\n        clickCount: 0\n      };\n      this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(event) {\n      event.preventDefault();  // Used to check that we get the event properly\n      this.setState({\n        clickCount: this.state.clickCount + 1\n      });\n    }\n\n    render() {\n      let children = null;\n      if (this.props.childCount) {\n        children = [];\n        for (let i = 1; i <= this.props.childCount; ++i) {\n          children.push(<span key={i} class={'' + i}>{null}{i}</span>);\n        }\n      }\n      // If onClick was passed, add it as a prop, otherwise, leave it undefined\n      const extraProps = {};\n      if (this.props.useEvents) {\n        extraProps.onClick = this.onClick;\n        extraProps['data-click-count'] = this.state.clickCount;\n      }\n\n      return (\n        <div\n          class={this.props.class}\n          {...extraProps}\n        >\n          {children}\n        </div>\n      );\n    }\n  }\n\n  class WrapperComp extends Component {\n    render() {\n      return <section><CustomComp {...this.props} /></section>;\n    }\n  }\n\n  class MyDiv extends Component {\n    render() {\n      return <div {...this.props}>{this.props.children}</div>;\n    }\n  }\n\n// Dummy assertion for testing async expect.it\n  expect.addAssertion('<string> to eventually have value <string>', (expect, subject, value) => {\n\n    return expect.promise((resolve, reject) => {\n\n      setTimeout(() => {\n        if (subject === value) {\n          resolve();\n        } else {\n          try {\n            expect.fail('Failed');\n          } catch (e) {\n            reject(e); // Return the UnexpectedError object\n          }\n        }\n      }, 10);\n    });\n  });\n\n  describe(`unexpected-react (${testGroupDescription})`, () => {\n\n    beforeEach(() => {\n      //UnexpectedPreact.clearAll();\n    });\n\n    describe('identify', () => {\n\n      it('identifies a rendered ES6 component', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<MyDiv class=\"foo\"/>));\n        expect(component, 'to be a', 'RenderedPreactElementWrapper');\n      });\n\n    });\n\n    describe('inspect', () => {\n\n      it('inspects a rendered native element', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<MyDiv class=\"foo\"/>));\n\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"foo\" />');\n      });\n\n      it('inspects a rendered native element with a string child', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<MyDiv class=\"foo\">content</MyDiv>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"foo\">content</div>');\n      });\n\n      it('inspects a rendered native element with a numeric child', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<MyDiv class=\"foo\">{42}</MyDiv>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"foo\">42</div>');\n      });\n\n\n      it('inspects a rendered element with children', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<MyDiv class=\"foo\"><span\n          class=\"child1\"/></MyDiv>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"foo\"><span class=\"child1\" /></div>');\n      });\n\n      it('inspects a rendered native element with children and content', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(\n          <MyDiv class=\"foo\">\n            <span class=\"child1\">child content 1</span>\n            <span class=\"child2\">child content 2</span>\n          </MyDiv>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"foo\">\\n' +\n          '  <span class=\"child1\">child content 1</span>\\n' +\n          '  <span class=\"child2\">child content 2</span>\\n' +\n          '</div>');\n      });\n\n      it('inspects a rendered custom component', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<CustomComp class=\"bar\"/>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<div class=\"bar\" />');\n      });\n\n      it('inspects a rendered custom component with a child custom component element', () => {\n\n        const component = PreactRenderedAdapter.wrapRootNode(renderIntoDocument(<WrapperComp class=\"bar\"/>));\n        expect(expect.inspect(component).toString(), 'to equal',\n          '<section><CustomComp class=\"bar\"><div class=\"bar\" /></CustomComp></section>'\n        );\n      });\n\n      it('inspects a component directly with the source component', function () {\n\n        const component = renderIntoDocument(<WrapperComp class=\"bar\"/>);\n        expect(expect.inspect(component).toString(), 'to equal',\n          [\n            '<WrapperComp class=\"bar\">',\n            '  <section><CustomComp class=\"bar\"><div class=\"bar\" /></CustomComp></section>',\n            '</WrapperComp>'\n          ].join('\\n')\n        );\n      });\n\n    });\n\n    describe('to have rendered', () => {\n\n      it('matches a rendered simple component', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\"/>);\n        return expect(component, 'to have rendered', <div class=\"bar\"/>);\n      });\n\n      it('matches a rendered deeper component', () => {\n\n        const component = renderIntoDocument(<WrapperComp class=\"bar\"/>);\n        return expect(component, 'to have rendered',\n          <CustomComp class=\"bar\">\n            <div class=\"bar\"/>\n          </CustomComp>\n        );\n      });\n\n      it('matches an a component with many children', () => {\n\n        const component = renderIntoDocument(<WrapperComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'to have rendered',\n          <div class=\"bar\">\n            <span class=\"1\">1</span>\n            <span class=\"2\">2</span>\n            <span class=\"3\">3</span>\n          </div>\n        );\n      });\n\n      it('identifies a missing class', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar foo\"/>);\n\n        return expect(() => expect(component, 'to have rendered', <div class=\"blah foo bar\"/>),\n          'to error',\n          'expected <CustomComp class=\"bar foo\"><div class=\"bar foo\" /></CustomComp>\\n' +\n          'to have rendered <div class=\"blah foo bar\" />\\n' +\n          '\\n' +\n          '<div class=\"bar foo\" // missing class \\'blah\\'\\n' +\n          '/>');\n      });\n\n      it('identifies a wrapper', () => {\n        const component = renderIntoDocument(<WrapperComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'to have rendered',\n          <section>\n            <span class=\"1\">1</span>\n            <span class=\"2\">2</span>\n            <span class=\"3\">3</span>\n          </section>);\n      });\n\n      it('updates on change', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" useEvents={true}/>);\n        const event = new window.Event('click', { bubbles: true, cancellable: true });\n        if (component.dispatchEvent) {\n          component.dispatchEvent(event);\n        } else {\n          // For preact-compat, the return value of render is the component instance, not the DOM node\n          component.base.dispatchEvent(event);\n        }\n\n        return expect(component, 'to have rendered',\n          <div class=\"bar\" data-click-count={1}/>\n        );\n      });\n\n      it('matches an expect.it assertion on a prop', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\"/>);\n\n        return expect(component, 'to have rendered',\n          <div class={ expect.it('to match', /bar/) }/>\n        );\n      });\n\n      it('highlights a difference with an expect.it assertion on a prop', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\"/>);\n\n        return expect(() => expect(component, 'to have rendered',\n          <div class={ expect.it('to match', /foo/) }/>\n          ), 'to throw',\n          'expected <CustomComp class=\"bar\"><div class=\"bar\" /></CustomComp>\\n' +\n          'to have rendered <div class={expect.it(\\'to match\\', /foo/)} />\\n' +\n          '\\n' +\n          '<div class=\"bar\" // expected \\'bar\\' to match /foo/\\n' +\n          '/>');\n      });\n\n      it('highlights a difference with an expect.it assertion on content', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={1}/>);\n        return expect(() => expect(component, 'to have rendered',\n          <div>\n            <span>{ expect.it('to match', /[a-z]/) }</span>\n          </div>\n          ), 'to error',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={1}>\\n' +\n          '  <div class=\"bar\"><span key={1} class=\"1\">1</span></div>\\n' +\n          '</CustomComp>\\n' +\n          'to have rendered <div><span>{expect.it(\\'to match\\', /[a-z]/)}</span></div>\\n' +\n          '\\n' +\n          '<div class=\"bar\">\\n' +\n          '  <span key={1} class=\"1\">\\n' +\n          \"    1 // expected '1' to match /[a-z]/\\n\" +\n          '  </span>\\n' +\n          '</div>');\n      });\n\n      it('matches an expect.it on JSX content', () => {\n\n        // This is a bit weird, as we don't support [array of children] 'to satisfy' {expect.it(...)}\n        // Only <node> 'to satisfy' {expect.it(...)}\n        // The output is also wrong here\n        // TODO: Fix this in htmllike, so we can expect.it on all the children\n        const CustomCompWrapper = () => <CustomComp class=\"bar\" childCount={2}/>;\n        const component = renderIntoDocument(<CustomCompWrapper />);\n        return expect(component, 'to have rendered',\n          <CustomComp>\n            { expect.it('to contain', <span class=\"1\"/>)\n              .and('to contain', <span class=\"2\"/>)}\n          </CustomComp>);\n      });\n\n      it('highlights a difference with an async expect.it on an attribute', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\"/>);\n        return expect(expect(component, 'to have rendered',\n          <div class={ expect.it('to eventually have value', 'foo') }/>\n          ), 'to be rejected with',\n          'expected <CustomComp class=\"bar\"><div class=\"bar\" /></CustomComp>\\n' +\n          'to have rendered <div class={expect.it(\\'to eventually have value\\', \\'foo\\')} />\\n' +\n          '\\n' +\n          '<div class=\"bar\" // expected \\'bar\\' to eventually have value \\'foo\\'\\n' +\n          '/>');\n\n      });\n\n      it('matches a component that renders multiple numbers', () => {\n\n        const NumberComponent = () => <div>{3}{6}</div>;\n\n        const component = renderIntoDocument(<NumberComponent />);\n        expect(component, 'to have rendered', <div>{3}{6}</div>);\n\n      });\n\n      it('matches a component that renders single numbers', () => {\n\n        const NumberComponent = () => <div>{3}</div>;\n\n        const component = renderIntoDocument(<NumberComponent />);\n        expect(component, 'to have rendered', <div>{3}</div>);\n\n      });\n\n    });\n\n    describe('contains', () => {\n\n      it('finds a deep nested component', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'to contain',\n          <div>\n            <span>2</span>\n          </div>\n        );\n\n      });\n\n      it('throws an error with the best match when the element is not found', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(() => expect(component, 'to contain',\n          <span class=\"foo\">2</span>\n          ), 'to throw',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={3}>\\n' +\n          '  <div class=\"bar\">\\n' +\n          '    <span key={1} class=\"1\">1</span>\\n' +\n          '    <span key={2} class=\"2\">2</span>\\n' +\n          '    <span key={3} class=\"3\">3</span>\\n' +\n          '  </div>\\n' +\n          '</CustomComp>\\n' +\n          'to contain <span class=\"foo\">2</span>\\n' +\n          '\\n' +\n          'the best match was\\n' +\n          '<span key={2} class=\"2\" // missing class \\'foo\\'\\n' +\n          '>\\n' +\n          '  2\\n' +\n          '</span>');\n\n      });\n\n      it('throws an error for `not to contain` with the match when the element is found ', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(() => expect(component, 'not to contain',\n          <span class=\"2\">2</span>\n          ), 'to throw',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={3}>\\n' +\n          '  <div class=\"bar\">\\n' +\n          '    <span key={1} class=\"1\">1</span>\\n' +\n          '    <span key={2} class=\"2\">2</span>\\n' +\n          '    <span key={3} class=\"3\">3</span>\\n' +\n          '  </div>\\n' +\n          '</CustomComp>\\n' +\n          'not to contain <span class=\"2\">2</span>\\n' +\n          '\\n' +\n          'but found the following match\\n' +\n          '<span key={2} class=\"2\">2</span>');\n      });\n\n      it('returns a rejected promise with the best match when the element is not found with an async expect.it', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(expect(component, 'to contain',\n          <span class={expect.it('to eventually have value', 'foo')}>2</span>\n          ), 'to be rejected with',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={3}>\\n' +\n          '  <div class=\"bar\">\\n' +\n          '    <span key={1} class=\"1\">1</span>\\n' +\n          '    <span key={2} class=\"2\">2</span>\\n' +\n          '    <span key={3} class=\"3\">3</span>\\n' +\n          '  </div>\\n' +\n          '</CustomComp>\\n' +\n          'to contain <span class={expect.it(\\'to eventually have value\\', \\'foo\\')}>2</span>\\n' +\n          '\\n' +\n          'the best match was\\n' +\n          '<span key={2} class=\"2\" // expected \\'2\\' to eventually have value \\'foo\\'\\n' +\n          '>\\n' +\n          '  2\\n' +\n          '</span>');\n      });\n\n    });\n\n    describe('queried for', () => {\n\n      it('finds a rendered component', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <span class=\"2\"/>, 'to have exactly rendered', <span key={2}\n                                                                                                     class=\"2\">2</span>);\n      });\n\n      it('finds a `contains` query', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <div class=\"bar\"/>, 'to contain', <span class=\"2\">2</span>);\n      });\n      it('errors when the query is not found', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(() => expect(component, 'queried for', <div class=\"not-exist\"/>, 'to contain',\n          <span class=\"2\">2</span>),\n          'to throw',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={3}>\\n' +\n          '  <div class=\"bar\">\\n' +\n          '    <span key={1} class=\"1\">1</span>\\n' +\n          '    <span key={2} class=\"2\">2</span>\\n' +\n          '    <span key={3} class=\"3\">3</span>\\n' +\n          '  </div>\\n' +\n          '</CustomComp>\\n' +\n          'queried for <div class=\"not-exist\" /> to contain <span class=\"2\">2</span>\\n' +\n          '\\n' +\n          '`queried for` found no match.  The best match was\\n' +\n          '<div class=\"bar\" // missing class \\'not-exist\\'\\n' +\n          '>\\n' +\n          '  <span key={1} class=\"1\">1</span>\\n' +\n          '  <span key={2} class=\"2\">2</span>\\n' +\n          '  <span key={3} class=\"3\">3</span>\\n' +\n          '</div>');\n      });\n\n      it('errors correctly when the following assertion fails', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(() => expect(component, 'queried for', <span class=\"2\"/>, 'to have rendered', <span\n            class=\"2\">foo</span>),\n          'to throw',\n          'expected\\n' +\n          '<CustomComp class=\"bar\" childCount={3}>\\n' +\n          '  <div class=\"bar\">\\n' +\n          '    <span key={1} class=\"1\">1</span>\\n' +\n          '    <span key={2} class=\"2\">2</span>\\n' +\n          '    <span key={3} class=\"3\">3</span>\\n' +\n          '  </div>\\n' +\n          '</CustomComp>\\n' +\n          'queried for <span class=\"2\" /> to have rendered <span class=\"2\">foo</span>\\n' +\n          '\\n' +\n          '<span key={2} class=\"2\">\\n' +\n          '  2 // -2\\n' +\n          '    // +foo\\n' +\n          '</span>');\n      });\n\n      it('finds an element with an async expect.it', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <div\n          class={ expect.it('to eventually have value', 'bar')}/>, 'to contain', <span class=\"2\">2</span>);\n      });\n\n      it('passes the located component as the resolution of the promise', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <span class=\"2\"/>)\n          .then(span => {\n            expect(span, 'to be a', window.HTMLElement);\n            expect(span, 'to satisfy', { className: '2' });\n          });\n      });\n\n      it('passes the located component as the resolution of the promise when the query is async', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <span class={ expect.it('to eventually have value', '2')}/>)\n          .then(span => {\n            expect(span, 'to be a', window.HTMLElement)\n              .and('to satisfy', { className: '2' });\n          });\n      });\n\n      it('uses `queryTarget` as the target element', () => {\n\n        const component = renderIntoDocument(<CustomComp class=\"bar\" childCount={3}/>);\n        return expect(component, 'queried for', <div><span queryTarget\n                                                           class={ expect.it('to eventually have value', '2')}/></div>)\n          .then(span => {\n            expect(span, 'to be a', window.HTMLElement)\n              .and('to satisfy', { className: '2' });\n          });\n      });\n\n    });\n\n    describe('with events', () => {\n\n      //  let ClickableComponent;\n      function Message({ msg }) {\n        return <span class=\"message\">{msg}</span>;\n      }\n\n      class ClickableComponent extends Component {\n\n        constructor() {\n          super();\n          this.state = {\n            clickCount: 1,\n            itemClickCount: 1\n          };\n\n          this.handleItemClick = this.handleItemClick.bind(this);\n          this.handleItemMouseDown = this.handleItemMouseDown.bind(this);\n          this.handleMainClick = this.handleMainClick.bind(this);\n          this.handleMouseDown = this.handleMouseDown.bind(this);\n        }\n\n        handleMainClick() {\n          this.setState({\n            clickCount: this.state.clickCount + 1\n          });\n        }\n\n        handleMouseDown(e) {\n          this.setState({\n            clickCount: this.state.clickCount + ((e && e.clientX) || 1)\n          });\n        }\n\n        handleItemClick() {\n          this.setState({\n            itemClickCount: this.state.itemClickCount + 1\n          });\n        }\n\n        handleItemMouseDown(e) {\n          this.setState({\n            itemClickCount: this.state.itemClickCount + ((e && e.clientX) || 1)\n          });\n        }\n\n        render() {\n          return (\n            <div onClick={this.handleMainClick} onMouseDown={this.handleMouseDown}>\n              <span class=\"main-click\">Main clicked {this.state.clickCount}</span>\n              <span class=\"item-click testfoo testbar\"\n                    onClick={this.handleItemClick}\n                    onMouseDown={this.handleItemMouseDown}>Item clicked {this.state.itemClickCount || 0}</span>\n              <Message msg=\"hello world\"/>\n            </div>\n          );\n        }\n\n      }\n\n      beforeEach(() => {\n      });\n\n      it('renders a zero initially', () => {\n\n        // This test is (was) failing, when the initial click count is 0. Seems to be a bug in the devtools.\n        // Not yet tried updating the devtools.\n        const otherComp = renderIntoDocument(<CustomComp />);\n        // expect(otherComp, 'to have rendered', <div>Blah</div>)\n        const component = renderIntoDocument(<ClickableComponent />);\n        expect(component, 'to have rendered',\n          <div>\n            <span class=\"main-click\">Main clicked 1</span>\n            <span class=\"item-click\">Item clicked 1</span>\n          </div>\n        );\n      });\n\n      it('calls click on a component using the deep renderer', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event click', 'to have rendered',\n          <div>\n            <span class=\"main-click\">Main clicked 2</span>\n          </div>\n        );\n      });\n\n      it('calls click on a sub component using the deep renderer', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component,\n          'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'to have rendered',\n          <div>\n            <span class=\"item-click\">Item clicked 2</span>\n          </div>\n        );\n      });\n\n      it('triggers multiple events', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'to have rendered',\n          <div>\n            <span class=\"item-click\">Item clicked 3</span>\n          </div>);\n      });\n\n      it('triggers multiple events with eventArgs', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'mousedown', { clientX: 2 },\n          'with event', 'mousedown', { clientX: 4 },\n          'to have rendered',\n          <div>\n            <span class=\"main-click\">Main clicked 7</span>\n          </div>);\n      });\n\n      it('calls click on a sub component with `to contain`', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'to contain',\n          <span class=\"item-click\">Item clicked 2</span>\n        );\n      });\n\n      it('calls click on a sub component with `not to contain`', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'not to contain',\n          <span class=\"item-click\">Item clicked 1</span>\n        );\n      });\n\n      it('calls click on a sub component with `not to contain with all children`', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'not to contain with all children',\n          <span class=\"item-click\">Item clicked 1</span>\n        );\n      });\n\n      it('ignores extra classes by default in the `on` clause', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click testfoo\"/>,\n          'to contain',\n          <span class=\"item-click\">Item clicked 2</span>\n        );\n      });\n\n      it('calls click on a sub component with `queried for`', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>,\n          'queried for', <span class=\"item-click\"/>,\n          'to have rendered',\n          <span class=\"item-click\">Item clicked 2</span>\n        );\n      });\n\n      it('calls events with event parameters', () => {\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(component, 'with event', 'mousedown', { clientX: 50 }, 'to have rendered',\n          <div>\n            <span class=\"main-click\">Main clicked 51</span>\n          </div>);\n      });\n\n      it('fails with a helpful error message when the target cannot be found', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        expect(() => expect(component, 'with event', 'click', 'on', <span class=\"not exists\"/>, 'to have rendered',\n          <div>\n            <span>This is never checked</span>\n          </div>), 'to throw', /Could not find the target for the event. The best match was/);\n      });\n\n      it('passes the resulting component as the resolution of the promise', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'click')\n          .then(result => {\n            expect(result.state, 'to satisfy', { clickCount: 2 });\n          });\n      });\n\n      it('passes the resulting component as the resolution of the promise with an event argument', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'mousedown', { clientX: 10 })\n          .then(result => {\n            expect(result.state, 'to satisfy', { clickCount: 11 });\n          });\n      });\n\n      it('passes the resulting component as the resolution of the promise when using `on`', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'click', 'on', <span class=\"item-click\"/>)\n          .then(result => {\n            expect(result.state, 'to satisfy', { itemClickCount: 2 });\n          });\n      });\n\n\n      it('passes the resulting component as the resolution of the promise when using event arguments and `on`', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'mousedown', { clientX: 10 }, 'on', <span class=\"item-click\"/>)\n          .then(result => {\n            expect(result.state, 'to satisfy', { itemClickCount: 11 });\n          });\n      });\n\n      it('passes the resulting component as the resolution of the promise with multiple events', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'mousedown', { clientX: 10 }, 'on', <span class=\"item-click\"/>,\n          'and with event', 'click')\n          .then(result => {\n            expect(result.state, 'to satisfy', { clickCount: 12, itemClickCount: 11 });\n          });\n      });\n\n      it('passes the resulting component as the resolution of the promise with multiple events and eventArgs', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'mousedown', { clientX: 10 }, 'on', <span class=\"item-click\"/>,\n          'and with event', 'mousedown', { clientX: 15 })\n          .then(result => {\n            expect(result.state, 'to satisfy', { clickCount: 26, itemClickCount: 11 });\n          });\n      });\n\n      it('uses the `eventTarget` prop to identify the target for the event', () => {\n\n        const component = renderIntoDocument(<ClickableComponent />);\n\n        return expect(component, 'with event', 'mousedown', { clientX: 10 }, 'on', <div ><span class=\"item-click\"\n                                                                                               eventTarget/></div>)\n          .then(result => {\n            expect(result.state, 'to satisfy', { clickCount: 11, itemClickCount: 11 });\n          });\n      });\n\n      describe('combined with queried for', () => {\n\n        class TodoItem extends Component {\n          constructor() {\n            super();\n            this.state = {\n              isCompleted: 'false'\n            };\n            this.onClick = this.onClick.bind(this);\n          }\n\n          onClick() {\n            this.setState({\n              isCompleted: 'true'\n            });\n          }\n\n          render() {\n            return (<div>\n              <span>{this.props.label}</span>\n              <span>Is complete {this.state.isCompleted}</span>\n              <button onClick={this.onClick}>Click me</button>\n            </div>);\n          }\n        }\n\n        class TodoList extends Component {\n\n          render() {\n            return (<div>\n              <TodoItem id={1} label=\"one\"/>\n              <TodoItem id={2} label=\"two\"/>\n              <TodoItem id={3} label=\"three\"/>\n            </div>);\n          }\n        }\n\n        it('combines with queried for', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          expect(component,\n            'queried for', <TodoItem id={2}/>,\n            'with event', 'click', 'on', <button />,\n            'to have rendered',\n            <div>\n              <span>two</span>\n              <span>Is complete true</span>\n            </div>\n          );\n\n        });\n\n        it('combines with queried for using the result promise', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          return expect(component, 'queried for', <TodoItem id={2}/>)\n            .then(todoItem => {\n              return expect(todoItem.base,\n                'with event', 'click', 'on', <button />,\n                'to have rendered',\n                <div>\n                  <span>two</span>\n                  <span>Is complete true</span>\n                </div>\n              );\n            });\n        });\n\n        it('combines with queried for using the result promise and the event promise', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          return expect(component, 'queried for', <TodoItem id={2}/>)\n            .then(todoItem => {\n              return expect(todoItem.base, 'with event', 'click', 'on', <button />);\n            })\n            .then(todoItem => {\n              return expect(todoItem, 'to have rendered',\n                <div>\n                  <span>two</span>\n                  <span>Is complete true</span>\n                </div>\n              );\n            });\n        });\n\n        it('with event followed by queried for returns correct element', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          return expect(component,\n            'with event click', 'on', <TodoItem id={2}>\n              <div>\n                <button eventTarget/>\n              </div>\n            </TodoItem>,\n            'queried for', <TodoItem id={2}/>)\n            .then(todoItem => {\n              expect(todoItem.state, 'to satisfy', { isCompleted: 'true' });\n            });\n        });\n\n        it('with multiple events followed by queried for returns correct element', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          return expect(component,\n            'with event', 'click', 'on', <TodoItem id={2}>\n              <div>\n                <button eventTarget/>\n              </div>\n            </TodoItem>,\n            'with event click', 'on', <TodoItem id={1}>\n              <div>\n                <button eventTarget/>\n              </div>\n            </TodoItem>,\n            'queried for', <TodoItem id={2}/>)\n            .then(todoItem => {\n              expect(todoItem.state, 'to satisfy', { isCompleted: 'true' });\n            });\n        });\n\n        it('with multiple events followed by queried for for a HTML element returns correct element', () => {\n\n          const component = renderIntoDocument(<TodoList />);\n          return expect(component,\n            'with event', 'click', {},\n            'with event', 'click', {},\n            'with event', 'click', {},\n            'queried for', <TodoItem id={2}>\n              <div queryTarget/>\n            </TodoItem>)\n            .then(div => {\n              expect(div, 'to be a', window.HTMLElement);\n              expect(div, 'to satisfy', { tagName: 'DIV' });\n            });\n        });\n      });\n    });\n\n    describe('when deeply rendered', function () {\n\n      const Stateless = function (props) {\n        return <div class=\"stateless-ftw\">Yay</div>;\n      };\n\n      it('renders a class component', function () {\n\n        expect(<CustomComp class=\"foo\"/>,\n          'when deeply rendered',\n          'to have rendered', <div class=\"foo\"></div>\n        );\n      });\n\n      it('renders a stateless component', function () {\n\n        expect(<Stateless />, 'when deeply rendered', 'to have exactly rendered', <div class=\"stateless-ftw\">Yay</div>);\n      });\n\n      it('errors when a stateless component render does not match', function () {\n\n        expect(() => expect(<Stateless />, 'when deeply rendered', 'to have exactly rendered',\n          <div class=\"stateless-broken\">Yay</div>\n          ), 'to throw',\n          [\n            'expected <Stateless />',\n            'when deeply rendered to have exactly rendered <div class=\"stateless-broken\">Yay</div>',\n            '',\n            '<div class=\"stateless-ftw\" // expected \\'stateless-ftw\\' to equal \\'stateless-broken\\'',\n            '                           //',\n            '                           // -stateless-ftw',\n            '                           // +stateless-broken',\n            '>',\n            '  Yay',\n            '</div>'\n          ].join('\\n'));\n      });\n    });\n\n    describe('to deeply render as', function () {\n\n      const Stateless = function (props) {\n        return <div class=\"stateless-ftw\">Yay</div>;\n      };\n\n      it('renders a class component', function () {\n\n        expect(<CustomComp class=\"foo\"/>,\n          'to deeply render as', <div class=\"foo\"></div>\n        );\n      });\n\n      it('renders a stateless component', function () {\n\n        expect(<Stateless />, 'to deeply render as', <div class=\"stateless-ftw\">Yay</div>);\n      });\n\n      it('errors when a stateless component render does not match', function () {\n        expect(() => expect(<Stateless />, 'to deeply render as',\n          <div class=\"stateless-broken\">Yay</div>\n          ), 'to throw',\n          [\n            'expected <Stateless /> to deeply render as <div class=\"stateless-broken\">Yay</div>',\n            '',\n            '<div class=\"stateless-ftw\" // missing class \\'stateless-broken\\'',\n            '>',\n            '  Yay',\n            '</div>'\n          ].join('\\n'));\n      });\n\n      it('renders using the exactly flag', function () {\n        expect(<CustomComp class=\"foo\"/>,\n          'to exactly deeply render as',\n          <div class=\"foo\"/>\n        );\n      });\n\n      it('outputs the error when using the exactly flag', function () {\n        expect(() => expect(<CustomComp class=\"foo\"/>,\n          'to exactly deeply render as',\n          <div class=\"foo bar\"/>\n          ), 'to throw',\n          [\n            'expected <CustomComp class=\"foo\" />',\n            'to exactly deeply render as <div class=\"foo bar\" />',\n            '',\n            '<div class=\"foo\" // expected \\'foo\\' to equal \\'foo bar\\'',\n            '                 //',\n            '                 // -foo',\n            '                 // +foo bar',\n            '/>'\n          ].join('\\n'));\n      });\n\n      it('outputs the error when using the with all classes flag', function () {\n        expect(() => expect(<CustomComp class=\"foo\"/>,\n          'to deeply render with all classes as',\n          <div class=\"foo bar\"/>\n          ), 'to throw',\n          [\n            'expected <CustomComp class=\"foo\" />',\n            'to deeply render with all classes as <div class=\"foo bar\" />',\n            '',\n            '<div class=\"foo\" // missing class \\'bar\\'',\n            '/>',\n          ].join('\\n'));\n      });\n    });\n\n    describe('snapshot assertions', function () {\n      it('`to match snapshot` fails with an error message about using the right require', function () {\n        expect(() => expect(<CustomComp />, 'when rendered', 'to match snapshot'),\n          'to throw', /To use snapshot.*unexpected-preact\\/jest/);\n      });\n\n      it('`to satisfy snapshot` fails with an error message about using the right require', function () {\n        expect(() => expect(<CustomComp />, 'when rendered', 'to satisfy snapshot'),\n          'to throw', /To use snapshot.*unexpected-preact\\/jest/);\n      });\n    });\n  });\n}\n\nrunTests({ h: Preact.h, Component: Preact.Component, render: Preact.render }, 'preact');\nrunTests({ h: PreactCompat.createElement, Component: PreactCompat.Component, render: PreactCompat.render }, 'preact-compat');\n"]}